{
  "openapi": "3.1.0",
  "info": {
    "title": "YAPP26 WEB2",
    "description": "SSOK 서비스 API 명세",
    "version": "v1"
  },
  "servers": [
    { "url": "https://api.ssok.info", "description": "Generated server url" }
  ],
  "tags": [
    { "name": "숙소 API", "description": "숙소 관련 API" },
    { "name": "OAUTH API", "description": "소셜 로그인 API" },
    { "name": "HEALTH CHECK API", "description": "헬스 체크 테스트 API" },
    { "name": "비교표 API", "description": "비교표 관련 API" }
  ],
  "paths": {
    "/api/comparison/{tableId}": {
      "get": {
        "tags": ["비교표 API"],
        "summary": "비교표 조회",
        "description": "비교표 메타 데이터와 포함된 숙소 정보 리스트를 조회합니다.",
        "operationId": "getComparisonTable",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "숙소가 포함된 테이블의 ID",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseComparisonTableResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["비교표 API"],
        "summary": "비교표 수정",
        "description": "비교표 메타 데이터와 비교 기준 항목을 수정합니다.",
        "operationId": "updateComparisonTable",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "수정할 테이블의 ID",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComparisonTableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseComparisonTableResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["비교표 API"],
        "summary": "비교표 숙소 추가",
        "description": "비교표에 새로운 숙소를 추가합니다.",
        "operationId": "addAccommodationToComparisonTable",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "테이블의 ID",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "accommodationId",
            "in": "query",
            "description": "숙소 ID",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseComparisonTableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/comparison/new": {
      "post": {
        "tags": ["비교표 API"],
        "summary": "비교표 생성",
        "description": "비교표 이름, 숙소 ID 리스트, 비교 기준 항목을 받아서 비교표 메타 데이터를 생성합니다.",
        "operationId": "createComparisonTable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComparisonTableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseCreateComparisonTableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/register": {
      "post": {
        "tags": ["숙소 API"],
        "summary": "숙소 카드 등록",
        "description": "링크를 첨부하여 숙소 카드를 등록합니다.",
        "operationId": "registerAccommodationCard",
        "requestBody": {
          "description": "숙소 등록 요청 데이터",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccommodationRegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseAccommodationRegisterResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/oauth/kakao": {
      "get": {
        "tags": ["OAUTH API"],
        "summary": "카카오 소셜 로그인 리다이렉션",
        "description": "클라이언트 요청 시 카카오 OAuth2 인가 페이지로 리다이렉트하고, 인가 완료 시 쿠키에 ACCESS TOKEN 및 REFRESH TOKEN을 발급합니다.",
        "operationId": "redirectToKakaoAuthorization",
        "responses": {
          "302": {
            "description": "카카오 인가 페이지로 리다이렉트됩니다. 인가 성공 시 쿠키에 ACCESS TOKEN과 REFRESH TOKEN이 설정됩니다."
          }
        }
      }
    },
    "/api/mock/user/{id}": {
      "get": {
        "tags": ["mock-api-controller"],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/mock/success": {
      "get": {
        "tags": ["mock-api-controller"],
        "operationId": "success",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/mock/exception-error": {
      "get": {
        "tags": ["mock-api-controller"],
        "operationId": "exceptionError",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/mock/custom-error": {
      "get": {
        "tags": ["mock-api-controller"],
        "operationId": "customError",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": ["HEALTH CHECK API"],
        "summary": "연결 테스트",
        "description": "...",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/comparison/factors": {
      "get": {
        "tags": ["비교표 API"],
        "summary": "비교표 기준 항목 Enum 리스트",
        "description": "비교 기준 항목 Enum 리스트를 반환합니다.",
        "operationId": "getComparisonFactorList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseComparisonFactorList"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/{accommodationId}": {
      "get": {
        "tags": ["숙소 API"],
        "summary": "숙소 단건 조회",
        "description": "특정 숙소 ID로 숙소 정보를 조회합니다.",
        "operationId": "getAccommodationById",
        "parameters": [
          {
            "name": "accommodationId",
            "in": "path",
            "description": "조회할 숙소의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseAccommodationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/search": {
      "get": {
        "tags": ["숙소 API"],
        "summary": "숙소 목록 조회",
        "description": "숙소 목록을 조회합니다.",
        "operationId": "getAccommodationByBoardIdAndUserId",
        "parameters": [
          {
            "name": "boardId",
            "in": "query",
            "description": "숙소가 포함된 여행보드의 ID",
            "required": true,
            "schema": { "type": "integer", "minimum": 1 }
          },
          {
            "name": "page",
            "in": "query",
            "description": "페이지 번호",
            "required": true,
            "schema": { "type": "integer", "minimum": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "페이지 크기",
            "required": true,
            "schema": { "type": "integer", "minimum": 1 }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "유저 ID, 없는 경우 모든 유저가 생성한 숙소 목록을 반환합니다. 현재 parameter로 받는 것은 임시 로직입니다.",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "정렬 기준, 기본 값은 saved_at_desc(최근 등록순)이고, price_asc(최저 가격순)을 제공합니다.",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseAccommodationPageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/count": {
      "get": {
        "tags": ["숙소 API"],
        "summary": "여행보드 숙소 개수 조회",
        "description": "여행보드에 포함된 숙소의 개수를 조회합니다.",
        "operationId": "getAccommodationCountByBoardId",
        "parameters": [
          {
            "name": "boardId",
            "in": "query",
            "description": "숙소가 포함된 여행보드의 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "유저 ID, 없는 경우 모든 유저가 생성한 숙소 목록을 반환합니다. 현재 parameter로 받는 것은 임시 로직입니다.",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponseAccommodationCountResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateComparisonTableRequest": {
        "type": "object",
        "properties": {
          "boardId": { "type": "integer", "format": "int64" },
          "tableName": { "type": "string", "minLength": 1 },
          "accommodationIdList": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" },
            "minItems": 1
          },
          "factorList": {
            "type": "array",
            "items": { "type": "string" },
            "minItems": 1
          }
        },
        "required": ["boardId"]
      },
      "AccommodationResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "url": { "type": "string" },
          "siteName": { "type": "string" },
          "logoUrl": { "type": "string" },
          "memo": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "createdBy": { "type": "integer", "format": "int64" },
          "boardId": { "type": "integer", "format": "int64" },
          "accommodationName": { "type": "string" },
          "images": { "type": "array", "items": { "type": "string" } },
          "address": { "type": "string" },
          "latitude": { "type": "number", "format": "double" },
          "longitude": { "type": "number", "format": "double" },
          "lowestPrice": { "type": "integer", "format": "int32" },
          "highestPrice": { "type": "integer", "format": "int32" },
          "currency": { "type": "string" },
          "reviewScore": { "type": "number", "format": "double" },
          "cleanlinessScore": { "type": "number", "format": "double" },
          "reviewSummary": { "type": "string" },
          "hotelId": { "type": "integer", "format": "int64" },
          "nearbyAttractions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Attraction" }
          },
          "nearbyTransportation": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Transportation" }
          },
          "amenities": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Amenity" }
          },
          "checkInTime": { "$ref": "#/components/schemas/CheckTime" },
          "checkOutTime": { "$ref": "#/components/schemas/CheckTime" }
        }
      },
      "Amenity": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "available": { "type": "boolean" },
          "description": { "type": "string" }
        }
      },
      "Attraction": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "type": { "type": "string" },
          "latitude": { "type": "number", "format": "double" },
          "longitude": { "type": "number", "format": "double" },
          "distance": { "type": "string" },
          "byFoot": { "$ref": "#/components/schemas/DistanceInfo" },
          "byCar": { "$ref": "#/components/schemas/DistanceInfo" }
        }
      },
      "CheckTime": {
        "type": "object",
        "properties": {
          "checkInTimeFrom": { "type": "string" },
          "checkInTimeTo": { "type": "string" },
          "checkOutTimeFrom": { "type": "string" },
          "checkOutTimeTo": { "type": "string" }
        }
      },
      "ComparisonTableResponse": {
        "type": "object",
        "properties": {
          "tableId": { "type": "integer", "format": "int64" },
          "tableName": { "type": "string" },
          "accommodationResponsesList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccommodationResponse" }
          },
          "factorsList": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PARKING",
                "BREAKFAST",
                "FREE_WIFI",
                "POOL",
                "FITNESS",
                "LUGGAGE_STORAGE",
                "BAR_LOUNGE",
                "FRONT_DESK_HOURS",
                "PET_FRIENDLY",
                "BUSINESS_SERVICES",
                "CLEANING_SERVICE",
                "HANDICAP_FACILITIES"
              ]
            }
          },
          "createdBy": { "type": "integer", "format": "int64" }
        }
      },
      "DistanceInfo": {
        "type": "object",
        "properties": {
          "distance": { "type": "string" },
          "time": { "type": "string" }
        }
      },
      "StandardResponseComparisonTableResponse": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": {
            "$ref": "#/components/schemas/ComparisonTableResponse",
            "description": "응답 결과 데이터"
          }
        }
      },
      "Transportation": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "type": { "type": "string" },
          "latitude": { "type": "number", "format": "double" },
          "longitude": { "type": "number", "format": "double" },
          "distance": { "type": "string" },
          "byFoot": { "$ref": "#/components/schemas/DistanceInfo" },
          "byCar": { "$ref": "#/components/schemas/DistanceInfo" }
        }
      },
      "CreateComparisonTableResponse": {
        "type": "object",
        "properties": { "tableId": { "type": "integer", "format": "int64" } }
      },
      "StandardResponseCreateComparisonTableResponse": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": {
            "$ref": "#/components/schemas/CreateComparisonTableResponse",
            "description": "응답 결과 데이터"
          }
        }
      },
      "AccommodationRegisterRequest": {
        "type": "object",
        "properties": {
          "url": { "type": "string", "minLength": 1 },
          "memo": { "type": "string", "maxLength": 50, "minLength": 0 },
          "boardId": { "type": "integer", "format": "int64" },
          "userId": { "type": "integer", "format": "int64" }
        },
        "required": ["boardId", "userId"]
      },
      "AccommodationRegisterResponse": {
        "type": "object",
        "properties": {
          "accommodationId": { "type": "integer", "format": "int64" }
        }
      },
      "StandardResponseAccommodationRegisterResponse": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": {
            "$ref": "#/components/schemas/AccommodationRegisterResponse",
            "description": "응답 결과 데이터"
          }
        }
      },
      "StandardResponseUserResponse": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": {
            "$ref": "#/components/schemas/UserResponse",
            "description": "응답 결과 데이터"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" }
        }
      },
      "StandardResponseString": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": { "type": "string", "description": "응답 결과 데이터" }
        }
      },
      "ComparisonFactorList": {
        "type": "object",
        "properties": {
          "factors": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PARKING",
                "BREAKFAST",
                "FREE_WIFI",
                "POOL",
                "FITNESS",
                "LUGGAGE_STORAGE",
                "BAR_LOUNGE",
                "FRONT_DESK_HOURS",
                "PET_FRIENDLY",
                "BUSINESS_SERVICES",
                "CLEANING_SERVICE",
                "HANDICAP_FACILITIES"
              ]
            }
          }
        }
      },
      "StandardResponseComparisonFactorList": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": {
            "$ref": "#/components/schemas/ComparisonFactorList",
            "description": "응답 결과 데이터"
          }
        }
      },
      "StandardResponseAccommodationResponse": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": {
            "$ref": "#/components/schemas/AccommodationResponse",
            "description": "응답 결과 데이터"
          }
        }
      },
      "AccommodationPageResponse": {
        "type": "object",
        "properties": {
          "accommodations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccommodationResponse" }
          },
          "hasNext": { "type": "boolean" }
        }
      },
      "StandardResponseAccommodationPageResponse": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": {
            "$ref": "#/components/schemas/AccommodationPageResponse",
            "description": "응답 결과 데이터"
          }
        }
      },
      "AccommodationCountResponse": {
        "type": "object",
        "properties": {
          "accommodationCount": { "type": "integer", "format": "int64" }
        }
      },
      "StandardResponseAccommodationCountResponse": {
        "type": "object",
        "description": "API 응답의 표준 형식을 정의하는 클래스",
        "properties": {
          "responseType": {
            "type": "string",
            "description": "응답 유형",
            "enum": ["SUCCESS", "ERROR"],
            "example": "SUCCESS"
          },
          "result": {
            "$ref": "#/components/schemas/AccommodationCountResponse",
            "description": "응답 결과 데이터"
          }
        }
      }
    }
  }
}
