/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * YAPP26 WEB2
 * SSOK 서비스 API 명세
 * OpenAPI spec version: v1
 */
export interface TripBoardUpdateRequest {
  /**
   * @minLength 0
   * @maxLength 20
   */
  boardName?: string;
  /**
   * @minLength 0
   * @maxLength 20
   * @pattern ^[가-힣a-zA-Z\s]+$
   */
  destination?: string;
  startDate: Date;
  endDate: Date;
}

/**
 * 응답 유형
 */
export type StandardResponseTripBoardUpdateResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseTripBoardUpdateResponse {
  /** 응답 유형 */
  responseType?: StandardResponseTripBoardUpdateResponseResponseType;
  /** 응답 결과 데이터 */
  result?: TripBoardUpdateResponse;
}

export interface TripBoardUpdateResponse {
  tripBoardId?: number;
  boardName?: string;
  destination?: string;
  startDate?: Date;
  endDate?: Date;
  updatedAt?: Date;
}

export interface AmenityUpdate {
  type: string;
  available?: boolean;
  description?: string;
}

export interface AttractionUpdate {
  name?: string;
  type?: string;
  distance?: string;
  latitude?: number;
  longitude?: number;
  byFoot?: DistanceInfo;
  byCar?: DistanceInfo;
}

export interface CheckTimeUpdate {
  from?: string;
  to?: string;
}

export interface DistanceInfo {
  distance?: string;
  time?: string;
}

export interface TransportationUpdate {
  name?: string;
  type?: string;
  distance?: string;
  latitude?: number;
  longitude?: number;
  byFoot?: DistanceInfo;
  byCar?: DistanceInfo;
}

export interface UpdateAccommodationRequest {
  id?: number;
  /**
   * @minLength 0
   * @maxLength 100
   */
  memo?: string;
  lowestPrice?: number;
  currency?: string;
  reviewScore?: number;
  cleanlinessScore?: number;
  /**
   * @minLength 0
   * @maxLength 100
   */
  reviewSummary?: string;
  nearbyAttractions?: AttractionUpdate[];
  nearbyTransportation?: TransportationUpdate[];
  amenities?: AmenityUpdate[];
  checkInTime?: CheckTimeUpdate;
  checkOutTime?: CheckTimeUpdate;
}

export interface UpdateComparisonTableRequest {
  boardId: number;
  /** @minLength 1 */
  tableName?: string;
  accommodationRequestList: UpdateAccommodationRequest[];
  /** @minItems 1 */
  accommodationIdList?: number[];
  /** @minItems 1 */
  factorList?: string[];
}

/**
 * 응답 유형
 */
export type StandardResponseBooleanResponseType = "SUCCESS" | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseBoolean {
  /** 응답 유형 */
  responseType?: StandardResponseBooleanResponseType;
  /** 응답 결과 데이터 */
  result?: boolean;
}

export interface TripBoardCreateRequest {
  /**
   * @minLength 0
   * @maxLength 20
   */
  boardName?: string;
  /**
   * @minLength 0
   * @maxLength 20
   * @pattern ^[가-힣a-zA-Z\s]+$
   */
  destination?: string;
  startDate: Date;
  endDate: Date;
}

/**
 * 응답 유형
 */
export type StandardResponseTripBoardCreateResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseTripBoardCreateResponse {
  /** 응답 유형 */
  responseType?: StandardResponseTripBoardCreateResponseResponseType;
  /** 응답 결과 데이터 */
  result?: TripBoardCreateResponse;
}

export interface TripBoardCreateResponse {
  boardId?: number;
  boardName?: string;
  destination?: string;
  travelPeriod?: string;
  startDate?: string;
  endDate?: string;
  invitationUrl?: string;
  invitationActive?: boolean;
  creator?: UserInfo;
  createdAt?: Date;
}

export interface UserInfo {
  id?: number;
  nickname?: string;
  email?: string;
  profileImage?: string;
}

export interface TripBoardLeaveRequest {
  removeResources: boolean;
}

/**
 * 응답 유형
 */
export type StandardResponseTripBoardLeaveResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseTripBoardLeaveResponse {
  /** 응답 유형 */
  responseType?: StandardResponseTripBoardLeaveResponseResponseType;
  /** 응답 결과 데이터 */
  result?: TripBoardLeaveResponse;
}

export interface TripBoardLeaveResponse {
  tripBoardId?: number;
  leftAt?: Date;
}

export interface LogoutResponse {
  logout?: boolean;
}

/**
 * 응답 유형
 */
export type StandardResponseLogoutResponseResponseType = "SUCCESS" | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseLogoutResponse {
  /** 응답 유형 */
  responseType?: StandardResponseLogoutResponseResponseType;
  /** 응답 결과 데이터 */
  result?: LogoutResponse;
}

/**
 * OAuth 로그인 응답
 */
export interface OauthLoginResponse {
  userId?: number;
  nickname?: string;
  token?: TokenSuccessResponse;
}

/**
 * 응답 유형
 */
export type StandardResponseOauthLoginResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseOauthLoginResponse {
  /** 응답 유형 */
  responseType?: StandardResponseOauthLoginResponseResponseType;
  /** 응답 결과 데이터 */
  result?: OauthLoginResponse;
}

export interface TokenSuccessResponse {
  accessToken?: string;
  refreshToken?: string;
}

export interface CreateComparisonTableRequest {
  boardId: number;
  /** @minLength 1 */
  tableName?: string;
  /** @minItems 1 */
  accommodationIdList?: number[];
  factorList?: string[];
}

export interface CreateComparisonTableResponse {
  tableId?: number;
}

/**
 * 응답 유형
 */
export type StandardResponseCreateComparisonTableResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseCreateComparisonTableResponse {
  /** 응답 유형 */
  responseType?: StandardResponseCreateComparisonTableResponseResponseType;
  /** 응답 결과 데이터 */
  result?: CreateComparisonTableResponse;
}

export interface AccommodationRegisterRequest {
  /** @minLength 1 */
  url?: string;
  /**
   * @minLength 0
   * @maxLength 50
   */
  memo?: string;
  boardId: number;
}

export interface AccommodationRegisterResponse {
  accommodationId?: number;
}

/**
 * 응답 유형
 */
export type StandardResponseAccommodationRegisterResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseAccommodationRegisterResponse {
  /** 응답 유형 */
  responseType?: StandardResponseAccommodationRegisterResponseResponseType;
  /** 응답 결과 데이터 */
  result?: AccommodationRegisterResponse;
}

export interface AddAccommodationRequest {
  accommodationIds: number[];
}

export interface AccommodationResponse {
  id?: number;
  url?: string;
  siteName?: string;
  logoUrl?: string;
  memo?: string;
  createdAt?: Date;
  updatedAt?: Date;
  createdBy?: number;
  boardId?: number;
  accommodationName?: string;
  images?: string[];
  address?: string;
  latitude?: number;
  longitude?: number;
  lowestPrice?: number;
  highestPrice?: number;
  currency?: string;
  reviewScore?: number;
  cleanlinessScore?: number;
  reviewSummary?: string;
  hotelId?: number;
  nearbyAttractions?: Attraction[];
  nearbyTransportation?: Transportation[];
  amenities?: Amenity[];
  checkInTime?: CheckTime;
  checkOutTime?: CheckTime;
}

export interface Amenity {
  type?: string;
  available?: boolean;
  description?: string;
}

export interface Attraction {
  name?: string;
  type?: string;
  latitude?: number;
  longitude?: number;
  distance?: string;
  byFoot?: DistanceInfo;
  byCar?: DistanceInfo;
}

export interface CheckTime {
  from?: string;
  to?: string;
}

export type ComparisonTableResponseFactorsListItem =
  | "REVIEW_SCORE"
  | "ATTRACTION"
  | "TRANSPORTATION"
  | "CLEANLINESS"
  | "AMENITY"
  | "CHECK_TIME"
  | "REVIEW_SUMMARY"
  | "MEMO";
export interface ComparisonTableResponse {
  tableId?: number;
  tableName?: string;
  accommodationResponsesList?: AccommodationResponse[];
  factorsList?: ComparisonTableResponseFactorsListItem[];
  createdBy?: number;
}

/**
 * 응답 유형
 */
export type StandardResponseComparisonTableResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseComparisonTableResponse {
  /** 응답 유형 */
  responseType?: StandardResponseComparisonTableResponseResponseType;
  /** 응답 결과 데이터 */
  result?: ComparisonTableResponse;
}

export interface Transportation {
  name?: string;
  type?: string;
  latitude?: number;
  longitude?: number;
  distance?: string;
  byFoot?: DistanceInfo;
  byCar?: DistanceInfo;
}

export type ParticipantProfileResponseRole = "OWNER" | "MEMBER";
export interface ParticipantProfileResponse {
  userId?: number;
  profileImageUrl?: string;
  nickname?: string;
  role?: ParticipantProfileResponseRole;
}

/**
 * 응답 유형
 */
export type StandardResponseTripBoardPageResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseTripBoardPageResponse {
  /** 응답 유형 */
  responseType?: StandardResponseTripBoardPageResponseResponseType;
  /** 응답 결과 데이터 */
  result?: TripBoardPageResponse;
}

export interface TripBoardPageResponse {
  tripBoards?: TripBoardSummaryResponse[];
  hasNext?: boolean;
}

export type TripBoardSummaryResponseUserRole = "OWNER" | "MEMBER";
export interface TripBoardSummaryResponse {
  boardId?: number;
  boardName?: string;
  destination?: string;
  startDate?: Date;
  endDate?: Date;
  travelPeriod?: string;
  userRole?: TripBoardSummaryResponseUserRole;
  participantCount?: number;
  participants?: ParticipantProfileResponse[];
  createdAt?: Date;
  updatedAt?: Date;
}

/**
 * OAuth 인가 URL 응답
 */
export interface AuthorizeUrlResponse {
  /** 카카오 OAuth 인가 URL */
  authorizeUrl?: string;
}

/**
 * 응답 유형
 */
export type StandardResponseAuthorizeUrlResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseAuthorizeUrlResponse {
  /** 응답 유형 */
  responseType?: StandardResponseAuthorizeUrlResponseResponseType;
  /** 응답 결과 데이터 */
  result?: AuthorizeUrlResponse;
}

export type ComparisonFactorListFactorsItem =
  | "REVIEW_SCORE"
  | "ATTRACTION"
  | "TRANSPORTATION"
  | "CLEANLINESS"
  | "AMENITY"
  | "CHECK_TIME"
  | "REVIEW_SUMMARY"
  | "MEMO";
export interface ComparisonFactorList {
  factors?: ComparisonFactorListFactorsItem[];
}

/**
 * 응답 유형
 */
export type StandardResponseComparisonFactorListResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseComparisonFactorList {
  /** 응답 유형 */
  responseType?: StandardResponseComparisonFactorListResponseType;
  /** 응답 결과 데이터 */
  result?: ComparisonFactorList;
}

export type AmenityFactorListFactorsItem =
  | "PARKING"
  | "BREAKFAST"
  | "FREE_WIFI"
  | "POOL"
  | "FITNESS"
  | "LUGGAGE_STORAGE"
  | "BAR_LOUNGE"
  | "FRONT_DESK_HOURS"
  | "PET_FRIENDLY"
  | "BUSINESS_SERVICES"
  | "CLEANING_SERVICE"
  | "HANDICAP_FACILITIES";
export interface AmenityFactorList {
  factors?: AmenityFactorListFactorsItem[];
}

/**
 * 응답 유형
 */
export type StandardResponseAmenityFactorListResponseType = "SUCCESS" | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseAmenityFactorList {
  /** 응답 유형 */
  responseType?: StandardResponseAmenityFactorListResponseType;
  /** 응답 결과 데이터 */
  result?: AmenityFactorList;
}

/**
 * 응답 유형
 */
export type StandardResponseAccommodationResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseAccommodationResponse {
  /** 응답 유형 */
  responseType?: StandardResponseAccommodationResponseResponseType;
  /** 응답 결과 데이터 */
  result?: AccommodationResponse;
}

export interface AccommodationPageResponse {
  accommodations?: AccommodationResponse[];
  hasNext?: boolean;
}

/**
 * 응답 유형
 */
export type StandardResponseAccommodationPageResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseAccommodationPageResponse {
  /** 응답 유형 */
  responseType?: StandardResponseAccommodationPageResponseResponseType;
  /** 응답 결과 데이터 */
  result?: AccommodationPageResponse;
}

export interface AccommodationCountResponse {
  accommodationCount?: number;
}

/**
 * 응답 유형
 */
export type StandardResponseAccommodationCountResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseAccommodationCountResponse {
  /** 응답 유형 */
  responseType?: StandardResponseAccommodationCountResponseResponseType;
  /** 응답 결과 데이터 */
  result?: AccommodationCountResponse;
}

/**
 * 응답 유형
 */
export type StandardResponseTripBoardDeleteResponseResponseType =
  | "SUCCESS"
  | "ERROR";
/**
 * API 응답의 표준 형식을 정의하는 클래스
 */
export interface StandardResponseTripBoardDeleteResponse {
  /** 응답 유형 */
  responseType?: StandardResponseTripBoardDeleteResponseResponseType;
  /** 응답 결과 데이터 */
  result?: TripBoardDeleteResponse;
}

export interface TripBoardDeleteResponse {
  tripBoardId?: number;
}

export type ExchangeKakaoTokenParams = {
  code: string;
  baseUrl: string;
};

export type GetTripBoardsParams = {
  /**
   * 페이지 번호
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   */
  size: number;
};

export type GetKakaoAuthorizeUrlParams = {
  baseUrl: string;
};

export type GetAccommodationByBoardIdAndUserIdParams = {
  /**
   * 숙소가 포함된 여행보드의 ID
   * @minimum 1
   */
  boardId: number;
  /**
   * 페이지 번호
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   */
  size: number;
  /**
   * 유저 ID, 없는 경우 모든 유저가 생성한 숙소 목록을 반환합니다. 현재 parameter로 받는 것은 임시 로직입니다.
   */
  userId?: number;
  /**
   * 정렬 기준, 기본 값은 saved_at_desc(최근 등록순)이고, price_asc(최저 가격순)을 제공합니다.
   */
  sort?: string;
};

export type GetAccommodationCountByBoardIdParams = {
  /**
   * 숙소가 포함된 여행보드의 ID
   * @minimum 1
   */
  boardId: number;
  /**
   * 유저 ID, 없는 경우 모든 유저가 생성한 숙소 목록을 반환합니다. 현재 parameter로 받는 것은 임시 로직입니다.
   */
  userId?: number;
};
